@using HopsHub.Frontend.Services.Interfaces

@inject IBeerService beerService

@namespace HopsHub.Frontend.Components

@if (IsLoading)
{
    <p>Loading beers...</p>
}
else if (ErrorMessage != null)
{
    <p class="text-danger">@ErrorMessage</p>
}
else if (Beers.Any())
{
    <ul>
        @foreach (var beer in Beers)
            {
            <li>
                <BeerCard Name=@beer.Name
                          Alc=@beer.Alc
                          AverageScore=@beer.AverageScore
                          ImgUrl=""
                          Brewer="" />
            </li>
            }
    </ul>
}
else
{
    <p>No beers found.</p>
}

@code
{
[Parameter]
public string TypeName { get; set; } = "";

[Parameter]
public int TypeId { get; set; } = 0;

private List<BeerDTO> Beers = new();
    private bool IsLoading = true;
    private string? ErrorMessage;

    protected override async Task OnParametersSetAsync()
    {
        IsLoading = true;
        ErrorMessage = null;


        try
        {
            if (TypeId == 0)
            {
                Beers = await beerService.GetBeersAsync();
            }
            else
            {
                Beers = await beerService.GetBeerByTypeAsync(TypeId);
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }
}