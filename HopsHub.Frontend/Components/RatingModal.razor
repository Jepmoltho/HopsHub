@using HopsHub.Frontend.Services
@using HopsHub.Frontend.Services.Interfaces
@using HopsHub.Shared.DTOs
@inject IBeerService BeerService
@inject IRatingService RatingService
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject AuthenticationStateService AuthStateService

<div class="rating-modal modal fade show" style="display:@(IsOpen ? "block" : "none");" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Rate a new Beer</h5>
                <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Write the name of the beer you want to rate. Select it if it exists, otherwise we will create it when you submit your rating.</p>
            </div>
            <form @onsubmit="HandleSubmit" class="add-rating-form">
                <div class="form-group">
                    <label for="beerName">Beer Name</label>
                    <input type="text" id="beerName" class="form-control" @bind="BeerName" required />
                </div>
                <div class="form-group">
                    <label for="score">Score</label>
                    <input type="number" id="score" class="form-control" @bind="Score" min="1" max="10" required />
                </div>
                <div class="form-group">
                    <label for="comment">Comment</label>
                    <textarea id="comment" class="form-control" @bind="Comment"></textarea>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    //Modal 
    private bool IsOpen { get; set; } = false;

    public void OpenModal()
    {
        IsOpen = true;
        StateHasChanged();
    }

    private void CloseModal()
    {
        IsOpen = false;
        StateHasChanged();
    }

    //Submit Form
    private string BeerName { get; set; } = string.Empty;
    private int Score { get; set; } = 5;
    private string Comment { get; set; } = string.Empty;

    public void HandleSubmit()
    {
        Console.WriteLine("Fire!");
    }
}