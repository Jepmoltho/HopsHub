@using HopsHub.Frontend.Services
@using HopsHub.Frontend.Services.Interfaces
@using Microsoft.AspNetCore.Components.Routing;
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject IAuthenticationStateService _authenticationStateService
@namespace HopsHub.Frontend.Layout

<div class="navigation-menu">
    <div class="navbar ps-3 top-row">
        <div class="container-fluid">
            <span class="flex-center-vertical">
                <a class="app-title" href="">HopsHub</a>
                @if (IsOnRatingsPage)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="black" class="bi bi-person-fill" viewBox="0 0 16 16">
                        <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                    </svg>
                }
                else if (IsOnPublicPage)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="black" class="bi bi-people-fill" viewBox="0 0 16 16">
                        <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.24 2.24 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.3 6.3 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
                    </svg>
                }
            </span>
            <button title="Navigation menu" class="navbar-toggel" @onclick="ToggleNavMenu">
                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5" />
                </svg>
            </button>
        </div>
    </div>

    <div class="nav-scrollable content-overflow-hidden @navMenuState" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <a class="@(HomePageActive ? "active" : "") nav-link" href="">
                    <span class="pe-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-people-fill flex-center-vertical" viewBox="0 0 16 16">
                            <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.24 2.24 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.3 6.3 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
                        </svg>
                    </span> Public Beer Ratings
                </a>
            </div>
            <div class="nav-item px-3" href="ratings">
                <a class="@(RatingsPageActive ? "active" : "") nav-link" href="ratings">
                    <span class="pe-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-fill flex-center-vertical" viewBox="0 0 16 16">
                            <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                        </svg>
                    </span> My Beer Ratings
                </a>
            </div>
            <div class="nav-item px-3">
                <a class="@(LoginPageActive ? "active" : "") nav-link" href="login">
                    <span class="pe-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-door-open-fill flex-center-vertical" viewBox="0 0 16 16">
                            <path d="M1.5 15a.5.5 0 0 0 0 1h13a.5.5 0 0 0 0-1H13V2.5A1.5 1.5 0 0 0 11.5 1H11V.5a.5.5 0 0 0-.57-.495l-7 1A.5.5 0 0 0 3 1.5V15zM11 2h.5a.5.5 0 0 1 .5.5V15h-1zm-2.5 8c-.276 0-.5-.448-.5-1s.224-1 .5-1 .5.448.5 1-.224 1-.5 1" />
                        </svg>
                    </span> Login
                </a>
            </div>
            <div class="nav-item px-3">
                <a class="@(SettingsPageActive ? "active" : "") nav-link" href="settings">
                    <span class="pe-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill flex-center-vertical" viewBox="0 0 16 16">
                            <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z" />
                        </svg>
                    </span> Settings
                </a>
            </div>

        </nav>
    </div>
</div>

    @code {

        [Inject]
        private NavigationManager NavigationManager { get; set; } = default!;

        private bool IsOnRatingsPage => NavigationManager.Uri.ToLower().Contains("/ratings");
        private bool IsOnPublicPage => !NavigationManager.Uri.ToLower().Contains("/login") && !NavigationManager.Uri.ToLower().Contains("/settings");

        protected override void OnInitialized()
        {
            _authenticationStateService.OnChange += StateHasChanged;
            NavigationManager.LocationChanged += HandleLocationChanged;
        }

        public void Dispose()
        {
            _authenticationStateService.OnChange -= StateHasChanged;
        }

        private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
        {
            SetActivePage();
            StateHasChanged();
        }

        private bool HomePageActive = false;
        private bool RatingsPageActive = false;
        private bool LoginPageActive = false;
        private bool SettingsPageActive = false;

        private void SetActivePage()
        {
            var uri = NavigationManager.Uri;

            if (uri.Contains("ratings"))
            {
                HomePageActive = false;
                RatingsPageActive = true;
                LoginPageActive = false;
                SettingsPageActive = false;
            }
            else if (uri.Contains("login"))
            {
                HomePageActive = false;
                RatingsPageActive = false;
                LoginPageActive = true;
                SettingsPageActive = false;
            }
            else if (uri.Contains("settings"))
            {
                HomePageActive = false;
                RatingsPageActive = false;
                LoginPageActive = false;
                SettingsPageActive = true;
            }
            else
            {
                HomePageActive = true;
                RatingsPageActive = false;
                LoginPageActive = false;
                SettingsPageActive = false;
            }
        }

        private string navMenuState = "content-initial-mobile-only";

        private void ToggleNavMenu()
        {
            if (navMenuState == "content-open")
            {
                navMenuState = "content-close";
            }
            else if (navMenuState == "content-close")
            {
                navMenuState = "content-open";
            }
            else if (navMenuState == "content-initial-mobile-only")
            {
                navMenuState = "content-open";
            }
        }
    }


