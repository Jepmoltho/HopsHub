@using HopsHub.Frontend.Services.Interfaces;
@using HopsHub.Shared.DTOs;
@inherits LayoutComponentBase
@inject ITypeService _typeService


<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">

            @if (IsLoading)
            {
                <p>...</p>
            }
            else if (ErrorMessage != null)
            {
                <p class="text-danger">@ErrorMessage</p>
            }
            else if (Types.Any())
            {
                @foreach (var type in Types)
                {
                    if (!string.IsNullOrEmpty(type.ShortName))
                    {
                        <button>
                            @type.ShortName
                        </button>
                    }
                    else
                    {
                        <button>
                            @type.Name
                        </button>
                    }
                }
            }
            else
            {
                <p>No types found</p>
            }
        </div>

        
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    private List<TypeDTO> Types = new();
    private bool IsLoading = true;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Types = await _typeService.GetTypesAsync();
            Types.Insert(0, new TypeDTO { Name = "All", ShortName = "" });

        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }
}