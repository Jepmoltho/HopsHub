@using HopsHub.Frontend.Components
@using HopsHub.Frontend.Layout
@using HopsHub.Frontend.Services
@using System.Web
@page "/ratings/{TypeName?}"

@inject NavigationManager NavigationManager
@inject AuthenticationStateService _authenticationStateService


<PageTitle>My Beers by rank</PageTitle>
<HeadContent></HeadContent>

<div class="ratings-page">
    <h1>My best ranked @(string.IsNullOrEmpty(TypeName) ? "Beers" : TypeName)</h1>

    <BeerList TypeName=@TypeName
              TypeId=@TypeId
              IsPrivate=true />
</div>

@if (_authenticationStateService.IsLoggedIn)
{
    <button class="add-rating-btn">
        Rate New Beer
    </button>
}

@code {
    [Parameter]
    public string? TypeName { get; set; }

    [Parameter]
    public int TypeId { get; set; } = 0;

    protected override void OnParametersSet()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        var queryParams = HttpUtility.ParseQueryString(uri.Query);

        if (!string.IsNullOrEmpty(queryParams["typeId"]))
        {
            TypeId = int.TryParse(queryParams["typeId"], out var parsedId) ? parsedId : 0;
        }
        else
        {
            TypeId = 0;
        }
    }
}